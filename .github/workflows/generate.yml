name: Generate PR Summaries
on:
    schedule:
        - cron: '0 */2 * * *'
    workflow_dispatch:

permissions: 
    contents: write
    actions:  write # trigger website deploy

jobs:
    generate:
        name: Generate PR Summaries
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v4

            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt

            - name: List PRs without summaries
              id: list_prs
              run: |
                python src/list_prs_without_summaries.py --owner github --repo docs --token ${{ github.token }} > pr_list.txt
                cat pr_list.txt

            - name: Generate summaries
              run: |
                if [ -n "$(cat pr_list.txt)" ]; then
                    for pr in $(cat pr_list.txt); do
                        echo "Generating summary for PR: $pr"
                        python src/generate_summary.py --repo github/docs --pr $pr --output "data/analysis/github/docs/$pr.json"
                    done
                fi
              env: 
                OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
            - name: Commit and push changes
              if: always() # Even push changes if generation fails in case one of them was successful
              run: |
                git config --local user.name "github-actions"
                git config --local user.email "github-actions@github.com"
                git add .
                git commit -m "Generated PR summaries" || echo "No changes to commit"
                git push || echo "No changes to push"
            
            - name: Trigger website deployment
              if: always()
              run: |
                curl -X POST \
                  -H "Accept: application/vnd.github.v3+json" \
                  -H "Authorization: token ${{ github.token }}" \
                  -H "Content-Type: application/json" \
                  https://api.github.com/repos/${{ github.repository }}/actions/workflows/deploy-website.yml/dispatches \
                  -d '{"ref":"main"}'
